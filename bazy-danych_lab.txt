### lab 04 ###

#Zad1
a) delete from postac where id_postaci=5
   delete from postac where id_postaci=6
b) alter table postac drop primary key;
   alter table postac modify id_postaci int;
   alter table postac drop primary key;
   alter table walizka drop foreign key walizka_ibfk_1;
   alter table przetwory drop foreign key przetwory_ibfk_1;
   alter table przetwory drop foreign key przetwory_ibfk_2;
   alter table izba drop foreign key izba_ibfk_1;
   alter table postac drop primary key;

#Zad2
a) alter table postac add pesel varchar(11) first;
   update postac set pesel='46353728179'+id_postaci;
   alter table add primary key(pesel);
b) alter table postac modify rodzaj enum('wiking','ptak','kobieta','syrena');
c) insert into postac(pesel, id_postaci, nazwa, rodzaj, data_ur, wiek) values('45638725694', '5', '1630-12-10', 200);

#Zad3
a) update postac set statek='Statek_Bjorna' where nazwa like '%a%';
b) update statek set max_ladownosc=max_ladownosc*0.7 where data_wodowania>'1900-12-31' and data_wodowania<'2001-01-01';
c) ???

#Zad4
a) alter table postac modify rodzaj enum('wiking','ptak','kobieta','syrena','waz');
   insert into postac(pesel, id_postaci, nazwa, rodzaj, data_ur, wiek, statek) values('30900864532', '8', 'Loko', 'waz', 'NULL', 'NULL', 'NULL');
b) create table marynarz like postac; 
c) insert into marynarz select * from postac where statek is not null;

#Zad5
a) update postac set statek=NULL;
b) delete from postac where id_postaci=7;
c) delete from statek where nazwa_statku=Statek_Bjorna;
   delete from statek where nazwa_statku=2;
d) alter table statek drop foreign key statek_ibfk_1;
   drop table statek;
e) create table zwierz (id int auto_increment primary key, nazwa varchar(50), wiek int unsigned);
f) insert into zwierz(nazwa, wiek) select nazwa, wiek from postac where rodzaj='ptak' and rodzaj='waz';




### lab 05 ###
1
b) select * from zasob;
c) select * from zasob where rodzaj='jedzenie';
d) select * from zasob where ilosc='1, 3, 5';
#Zad4 
a) select distinct rodzaj from kreatura;
b) select concat(nazwa, ' - ', rodzaj) from kreatura where rodzaj like 'wi%';
c) select nazwa, waga*ilosc from zasob where year(dataPozyskania) between 2000 and 2007;
   select nazwa, waga*ilosc from zasob where dataPozyskania between '2000-01-01' and '2007-12-31';


#Zad5 
a) select concat (nazwa,' ',waga*ilosc*0.7,' odpad to ',waga*ilosc*0.3) from zasob where rodzaj='jedzenie';
b) select * from zasob where rodzaj is null; 
c) select distinct nazwa,rodzaj from zasob where nazwa like 'Ba%' or nazwa like '%os' order by nazwa;

### lab 06 ###

#Zad1
1) select avg(waga) from kreatura where rodzaj='wiking';
2) select rodzaj, count(*), avg(waga) from kreatura group by rodzaj;
3) select avg(2020-year(dataUr)) as wiek from kreatura group by rodzaj;

#Zad2
1) select sum(udzwig), rodzaj from kreatura group by rodzaj;
2) select nazwa, avgs(waga) from zasob where ilosc >=4 group by nazwa having sum(waga)>10;
3) select rodzaj, count(*) from zasob group by rodzaj;
   select rodzaj, count(distinct(nazwa)) from zasob group by rodzaj;
   select rodzaj, count(distinct(nazwa)) as liczba from zasob group by rodzaj having liczba>1;

#Zad3
1) 
2)
3) select k.idKreatury, k.nazwa from kreatura k where k.idKreatury not in(SELECT idKreatury from ekwipunek where idKreatury is not null);

#Zad4
a  select * from zasob z, kreatura natural join ekwipunek where kreatura.rodzaj='wiking' and year(kreatura.dataUr) between 1670 and 1679 and z.idZasobu=ekwipunek.idZasobu;
   select * from zasob z, kreatura natural join ekwipunek where kreatura.rodzaj='wiking' and year(kreatura.dataUr) between 1670 and 1679 and z.idZasobu=ekwipunek.idZasobu and kreatura.idKreatury=ekwipunek.idKreatury;
   select k.nazwa, z.nazwa from kreatura k, zasob z natural join ekwipunek where year(k.dataUr) like '167%' and k.rodzaj='wiking';
b  select k.nazwa from kreatura k left join ekwipunek e on k.idKreatury=e.idKreatury inner join zasob z on e.idZasobu=z.idZasobu where z.rodzaj='jedzenie' order by dataUr desc limit 5;
c  



















